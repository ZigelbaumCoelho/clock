C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE PRISM
OBJECT MODULE PLACED IN C:/Users/Jon Moeller/Documents/PSoC Creator/clockARM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/Debug/PRISM.OBJ
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\1.0\PSoC Creator\import\keil\pk51\8.16\C51\BIN\c51.exe C:\Use
                    -rs\Jon Moeller\Documents\PSoC Creator\clockARM\ClockTest\ClockTest.cydsn\Generated_Source\PSoC3\PRISM.c NOIV LARGE MODDP
                    -2 OMF2 VB(1) PR(C:/Users/Jon Moeller/Documents/PSoC Creator/clockARM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/Debug/PRI
                    -SM.lst) CD DB NOIP OT(2,SIZE) INCDIR(Generated_Source/PSoC3) OJ(C:/Users/Jon Moeller/Documents/PSoC Creator/clockARM/Clo
                    -ckTest/ClockTest.cydsn/DP8051_Keil_816/Debug/PRISM.OBJ)

line level    source

   1          /*******************************************************************************
   2          * File Name: PRISM.c
   3          * Version 2.0
   4          *
   5          * Description:
   6          *  This file provides the source code of the API for the PrISM Component.
   7          *
   8          * Note:
   9          *  The PRiSM Component consists of a 8, 16, 24, 32 - bit PrISM, it
  10          *  depends on length Polynomial value and user selected Seed Value. 
  11          *
  12          ********************************************************************************
  13          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          *******************************************************************************/
  18          
  19          #include "PRISM.h"
  20          
  21          
  22          /***************************************
  23          * Local data allocation
  24          ***************************************/
  25          
  26          uint8 PRISM_initVar = 0u;
  27          
  28          
  29          /*******************************************************************************
  30          * FUNCTION NAME:   PRISM_Start
  31          ********************************************************************************
  32          *
  33          * Summary:
  34          *  The start function sets Polynomial, Seed and Pulse Density registers provided
  35          *  by customizer. PrISM computation starts on rising edge of input clock.
  36          *
  37          * Parameters:  
  38          *  None.
  39          *
  40          * Return:  
  41          *  None.
  42          *
  43          * Global variables:
  44          *  The PRISM_initVar variable is used to indicate initial
  45          *  configuration of this component.  The variable is initialized to zero and
  46          *  set to 1 the first time PRISM_Start() is called. This allows for
  47          *  component initialization without re-initialization in all subsequent calls
  48          *  to the PRISM_Start() routine. 
  49          
  50          * Reentrant:
  51          *  No.
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 2   

  52          *
  53          *******************************************************************************/
  54          void PRISM_Start(void) 
  55          {
  56   1          /* If not Initialized then initialize all required hardware and software */
  57   1          if(PRISM_initVar == 0u)
  58   1          {
  59   2              PRISM_Init();
  60   2              PRISM_initVar = 1u;
  61   2          }
  62   1          PRISM_Enable();
  63   1      
  64   1      }
  65          
  66          
  67          /*******************************************************************************
  68          * Function Name: PRISM_Init
  69          ********************************************************************************
  70          *
  71          * Summary:
  72          *  Initialize component's parameters to the parameters set by user in the 
  73          *  customizer of the component placed onto schematic. Usually called in 
  74          *  PRISM_Start().
  75          *
  76          * Parameters:  
  77          *  None.
  78          *
  79          * Return: 
  80          *  None.
  81          *
  82          *******************************************************************************/
  83          void PRISM_Init(void) 
  84          {
  85   1          uint8 enableInterrupts;
  86   1          
  87   1          /* Writes Seed value, polynom value and density provided by customizer */
  88   1          PRISM_WriteSeed(PRISM_SEED);
  89   1          PRISM_WritePolynomial(PRISM_POLYNOM);
  90   1          PRISM_WritePulse0(PRISM_DENSITY0);
  91   1          PRISM_WritePulse1(PRISM_DENSITY1);
  92   1          
  93   1          enableInterrupts = CyEnterCriticalSection();
  94   1          /* Set FIFO0_CLR bit to use FIFO0 as a simple one-byte buffer*/
  95   1          #if (PRISM_RESOLUTION <= 8u)      /* 8bit - PrISM */
                      PRISM_AUX_CONTROL_REG |= PRISM_FIFO0_CLR;
                  #elif (PRISM_RESOLUTION <= 16u)   /* 16bit - PrISM */
  98   1              CY_SET_REG16(PRISM_AUX_CONTROL_PTR, CY_GET_REG16(PRISM_AUX_CONTROL_PTR) | 
  99   1                                              PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u);
 100   1          #elif (PRISM_RESOLUTION <= 24u)   /* 24bit - PrISM */
                      CY_SET_REG24(PRISM_AUX_CONTROL_PTR, CY_GET_REG24(PRISM_AUX_CONTROL_PTR) |
                                                      PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u );
                      CY_SET_REG24(PRISM_AUX_CONTROL2_PTR, CY_GET_REG24(PRISM_AUX_CONTROL2_PTR) | 
                                                      PRISM_FIFO0_CLR );
                  #else                                 /* 32bit - PrISM */
                      CY_SET_REG32(PRISM_AUX_CONTROL_PTR, CY_GET_REG32(PRISM_AUX_CONTROL_PTR) |
                                                      PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u );
                      CY_SET_REG32(PRISM_AUX_CONTROL2_PTR, CY_GET_REG32(PRISM_AUX_CONTROL2_PTR) |
                                                      PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u );
                  #endif                                /* End PRISM_RESOLUTION */
 111   1          CyExitCriticalSection(enableInterrupts);
 112   1          
 113   1          #if(!PRISM_PULSE_TYPE_HARDCODED)
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 3   

 114   1              /* Writes density type provided by customizer */
 115   1              if(PRISM_GREATERTHAN_OR_EQUAL == 0 )
 116   1              {
 117   2                  PRISM_CONTROL_REG |= PRISM_CTRL_COMPARE_TYPE0_GREATER_THAN_OR_EQUAL;
 118   2              }
 119   1              else
 120   1              {
 121   2                  PRISM_CONTROL_REG &= ~PRISM_CTRL_COMPARE_TYPE0_GREATER_THAN_OR_EQUAL;
 122   2              }
 123   1          
 124   1              if(PRISM_GREATERTHAN_OR_EQUAL == 0)
 125   1              {
 126   2                  PRISM_CONTROL_REG |= PRISM_CTRL_COMPARE_TYPE1_GREATER_THAN_OR_EQUAL;
 127   2              }
 128   1              else
 129   1              {
 130   2                  PRISM_CONTROL_REG &= ~PRISM_CTRL_COMPARE_TYPE1_GREATER_THAN_OR_EQUAL;
 131   2              }
 132   1          #endif /* End PRISM_PULSE_TYPE_HARDCODED */
 133   1      }
 134          
 135          
 136          /*******************************************************************************
 137          * Function Name: PRISM_Enable
 138          ********************************************************************************
 139          *  
 140          * Summary: 
 141          *  Enables the PrISM block operation
 142          *
 143          * Parameters:  
 144          *  None.
 145          *
 146          * Return: 
 147          *  None.
 148          *
 149          *******************************************************************************/
 150          void PRISM_Enable(void) 
 151          {
 152   1          #if(!PRISM_PULSE_TYPE_HARDCODED)
 153   1              /* Enable the PrISM computation */
 154   1              PRISM_CONTROL_REG |= PRISM_CTRL_ENABLE;
 155   1          #endif /* End PRISM_PULSE_TYPE_HARDCODED */
 156   1      }
 157          
 158          
 159          /*******************************************************************************
 160          * FUNCTION NAME:   PRISM_Stop
 161          ********************************************************************************
 162          *
 163          * Summary:
 164          *  Stops PrISM computation. Outputs remain constant.
 165          *
 166          * Parameters:  
 167          *  None.
 168          *
 169          * Return: 
 170          *  None.
 171          *
 172          *******************************************************************************/
 173          void PRISM_Stop(void) 
 174          {
 175   1          #if(!PRISM_PULSE_TYPE_HARDCODED)
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 4   

 176   1              PRISM_CONTROL_REG &= ~PRISM_CTRL_ENABLE;
 177   1          #else
                      /* PulseTypeHardoded option enabled - to stop PrISM use enable input */
                  #endif /* End $INSTANCE_NAME`_PULSE_TYPE_HARDCODED */
 180   1      }
 181          
 182          #if(!PRISM_PULSE_TYPE_HARDCODED)
 183          
 184          
 185              /***************************************************************************
 186              * FUNCTION NAME:     PRISM_SetPulse0Mode
 187              ****************************************************************************
 188              *
 189              * Summary:
 190              *  Sets the pulse density type for Density0. Less than or Equal(<=) or 
 191              *  Greater than or Equal(>=).
 192              *
 193              * Parameters:
 194              *  pulse0Type: Selected pulse density type.
 195              *
 196              * Return:
 197              *  None.
 198              *
 199              ***************************************************************************/
 200              void PRISM_SetPulse0Mode(uint8 pulse0Type) 
 201              {
 202   1              if(pulse0Type == PRISM_GREATERTHAN_OR_EQUAL)
 203   1              {
 204   2                  PRISM_CONTROL_REG |= PRISM_CTRL_COMPARE_TYPE0_GREATER_THAN_OR_EQUAL;
 205   2              }
 206   1              else
 207   1              {
 208   2                  PRISM_CONTROL_REG &= ~PRISM_CTRL_COMPARE_TYPE0_GREATER_THAN_OR_EQUAL;
 209   2              }
 210   1          }
 211              
 212              
 213              /***************************************************************************
 214              * FUNCTION NAME:   PRISM_SetPulse1Mode
 215              ****************************************************************************
 216              *
 217              * Summary:
 218              *  Sets the pulse density type for Density1. Less than or Equal(<=) or 
 219              *  Greater than or Equal(>=).
 220              *
 221              * Parameters:  
 222              *  pulse1Type: Selected pulse density type.
 223              *
 224              * Return:
 225              *  None.
 226              *
 227              ***************************************************************************/
 228              void PRISM_SetPulse1Mode(uint8 pulse1Type) 
 229              {
 230   1              if(pulse1Type == PRISM_GREATERTHAN_OR_EQUAL)
 231   1              {
 232   2                  PRISM_CONTROL_REG |= PRISM_CTRL_COMPARE_TYPE1_GREATER_THAN_OR_EQUAL;
 233   2              }
 234   1              else
 235   1              {
 236   2                  PRISM_CONTROL_REG &= ~PRISM_CTRL_COMPARE_TYPE1_GREATER_THAN_OR_EQUAL;
 237   2              }
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 5   

 238   1          }
 239          
 240          #endif /* End PRISM_PULSE_TYPE_HARDCODED == 0 */
 241          
 242          
 243          /*******************************************************************************
 244          * FUNCTION NAME:   PRISM_ReadSeed
 245          ********************************************************************************
 246          *
 247          * Summary:
 248          *  Reads the PrISM Seed register.
 249          *
 250          * Parameters:
 251          *  None.
 252          *
 253          * Return:
 254          *  Current Period register value.
 255          *
 256          *******************************************************************************/
 257          uint16 PRISM_ReadSeed(void) 
 258          {
 259   1          return( CY_GET_REG16(PRISM_SEED_PTR) );
 260   1      }
 261          
 262          
 263          /*******************************************************************************
 264          * FUNCTION NAME:   PRISM_WriteSeed
 265          ********************************************************************************
 266          *
 267          * Summary:
 268          *  Writes the PrISM Seed register with the start value.
 269          *
 270          * Parameters:
 271          *  seed: Seed register value.
 272          *
 273          * Return:
 274          *  None.
 275          *
 276          *******************************************************************************/
 277          void PRISM_WriteSeed(uint16 seed) 
 278          {
 279   1          if(seed != 0u)
 280   1          {
 281   2              CY_SET_REG16(PRISM_SEED_COPY_PTR, seed);
 282   2              CY_SET_REG16(PRISM_SEED_PTR, seed);
 283   2          }
 284   1      }
 285          
 286          
 287          /*******************************************************************************
 288          * FUNCTION NAME:   PRISM_ReadPolynomial
 289          ********************************************************************************
 290          *
 291          * Summary:
 292          *  Reads the PrISM polynomial.
 293          *
 294          * Parameters:
 295          *  None.
 296          *
 297          * Return:
 298          *  PrISM polynomial.
 299          *
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 6   

 300          *******************************************************************************/
 301          uint16 PRISM_ReadPolynomial(void) 
 302          {
 303   1          return( CY_GET_REG16(PRISM_POLYNOM_PTR) );
 304   1      }
 305          
 306          
 307          /*******************************************************************************
 308          * FUNCTION NAME:   PRISM_WritePolynomial
 309          ********************************************************************************
 310          *
 311          * Summary:
 312          *  Writes the PrISM polynomial.
 313          *
 314          * Parameters:
 315          *  polynomial: PrISM polynomial.
 316          *
 317          * Return:
 318          *  None.
 319          *
 320          *******************************************************************************/
 321          void PRISM_WritePolynomial(uint16 polynomial) \
 322                                                                          
 323          {
 324   1          CY_SET_REG16(PRISM_POLYNOM_PTR, polynomial);
 325   1          
 326   1      }
 327          
 328          
 329          /*******************************************************************************
 330          * FUNCTION NAME:   PRISM_ReadPulse0
 331          ********************************************************************************
 332          *
 333          * Summary:
 334          *  Reads the PrISM Pulse Density0 register.
 335          *
 336          * Parameters:
 337          *  None.
 338          *
 339          * Return:
 340          *  Pulse Density0 register value.
 341          *
 342          *******************************************************************************/
 343          uint16 PRISM_ReadPulse0(void) 
 344          {
 345   1          return( CY_GET_REG16(PRISM_DENSITY0_PTR) );
 346   1      }
 347          
 348          
 349          /*******************************************************************************
 350          * FUNCTION NAME:   PRISM_WritePulse0
 351          ********************************************************************************
 352          *
 353          * Summary:
 354          *  Writes the PrISM Pulse Density0 register with the Pulse Density value.
 355          *
 356          * Parameters:
 357          *  pulseDensity0: Pulse Density value.
 358          *
 359          * Return:
 360          *  None.
 361          *
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 7   

 362          *******************************************************************************/
 363          void PRISM_WritePulse0(uint16 pulseDensity0) \
 364                                                                          
 365          {
 366   1          CY_SET_REG16(PRISM_DENSITY0_PTR, pulseDensity0);
 367   1      }
 368          
 369          
 370          /*******************************************************************************
 371          * FUNCTION NAME:   PRISM_ReadPulse1
 372          ********************************************************************************
 373          *
 374          * Summary:
 375          *  Reads the PrISM Pulse Density1 register.
 376          *
 377          * Parameters:
 378          *  None.
 379          *
 380          * Return:
 381          *  Pulse Density1 register value.
 382          *
 383          *******************************************************************************/
 384          uint16 PRISM_ReadPulse1(void) 
 385          {
 386   1          return( CY_GET_REG16(PRISM_DENSITY1_PTR) );
 387   1      }
 388          
 389          
 390          /*******************************************************************************
 391          * FUNCTION NAME:   PRISM_WritePulse1
 392          ********************************************************************************
 393          *
 394          * Summary:
 395          *  Writes the PrISM Pulse Density1 register with the Pulse Density value.
 396          *
 397          * Parameters:
 398          *  pulseDensity1: Pulse Density value.
 399          *
 400          * Return:
 401          *  None.
 402          *
 403          *******************************************************************************/
 404          void PRISM_WritePulse1(uint16 pulseDensity1) \
 405                                                                              
 406          {
 407   1          CY_SET_REG16(PRISM_DENSITY1_PTR, pulseDensity1);
 408   1      }
 409          
 410          
 411          /* [] END OF FILE */
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION PRISM_Start (BEGIN)
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 57
0000 900000      R     MOV     DPTR,#PRISM_initVar
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 7009              JNZ     ?C0001
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0008 120000      R     LCALL   PRISM_Init
                                           ; SOURCE LINE # 60
000B 900000      R     MOV     DPTR,#PRISM_initVar
000E 7401              MOV     A,#01H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0011         ?C0001:
                                           ; SOURCE LINE # 62
0011 120000      R     LCALL   PRISM_Enable
                                           ; SOURCE LINE # 64
0014 22                RET     
             ; FUNCTION PRISM_Start (END)

             ; FUNCTION PRISM_Init (BEGIN)
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 88
0000 7FFF              MOV     R7,#0FFH
0002 7EFF              MOV     R6,#0FFH
0004 120000      R     LCALL   _PRISM_WriteSeed
                                           ; SOURCE LINE # 89
0007 7F00              MOV     R7,#00H
0009 7EB4              MOV     R6,#0B4H
000B 120000      R     LCALL   _PRISM_WritePolynomial
                                           ; SOURCE LINE # 90
000E 7F01              MOV     R7,#01H
0010 7E00              MOV     R6,#00H
0012 120000      R     LCALL   _PRISM_WritePulse0
                                           ; SOURCE LINE # 91
0015 7F01              MOV     R7,#01H
0017 7E00              MOV     R6,#00H
0019 120000      R     LCALL   _PRISM_WritePulse1
                                           ; SOURCE LINE # 93
001C 120000      E     LCALL   CyEnterCriticalSection
001F 900000      R     MOV     DPTR,#enableInterrupts
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 99
0024 7B02              MOV     R3,#02H
0026 7A65              MOV     R2,#065H
0028 7998              MOV     R1,#098H
002A 120000      E     LCALL   _cyread16_nodpx
002D EE                MOV     A,R6
002E 4401              ORL     A,#01H
0030 FC                MOV     R4,A
0031 EF                MOV     A,R7
0032 4401              ORL     A,#01H
0034 FD                MOV     R5,A
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 9   

0035 7B02              MOV     R3,#02H
0037 7A65              MOV     R2,#065H
0039 7998              MOV     R1,#098H
003B 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 111
003E 900000      R     MOV     DPTR,#enableInterrupts
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
0046         ?C0003:
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
0046 906579            MOV     DPTR,#06579H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C 54FD              ANL     A,#0FDH
004E FF                MOV     R7,A
004F EF                MOV     A,R7
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
0051         ?C0005:
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
0051 906579            MOV     DPTR,#06579H
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 54FB              ANL     A,#0FBH
0059 FF                MOV     R7,A
005A EF                MOV     A,R7
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 133
005C         ?C0007:
005C 22                RET     
             ; FUNCTION PRISM_Init (END)

             ; FUNCTION PRISM_Enable (BEGIN)
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 154
0000 906579            MOV     DPTR,#06579H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4401              ORL     A,#01H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
000B 22                RET     
             ; FUNCTION PRISM_Enable (END)

C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 10  

             ; FUNCTION PRISM_Stop (BEGIN)
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 176
0000 906579            MOV     DPTR,#06579H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54FE              ANL     A,#0FEH
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
000B 22                RET     
             ; FUNCTION PRISM_Stop (END)

             ; FUNCTION _PRISM_SetPulse0Mode (BEGIN)
                                           ; SOURCE LINE # 200
0000 900000      R     MOV     DPTR,#pulse0Type
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
0005 900000      R     MOV     DPTR,#pulse0Type
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B B4010C            CJNE    A,#01H,?C0010
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
000E 906579            MOV     DPTR,#06579H
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 4402              ORL     A,#02H
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
0019 22                RET     
001A         ?C0010:
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
001A 906579            MOV     DPTR,#06579H
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F EF                MOV     A,R7
0020 54FD              ANL     A,#0FDH
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
0025         ?C0012:
0025 22                RET     
             ; FUNCTION _PRISM_SetPulse0Mode (END)

             ; FUNCTION _PRISM_SetPulse1Mode (BEGIN)
                                           ; SOURCE LINE # 228
0000 900000      R     MOV     DPTR,#pulse1Type
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 11  

                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
0005 900000      R     MOV     DPTR,#pulse1Type
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B B4010C            CJNE    A,#01H,?C0013
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
000E 906579            MOV     DPTR,#06579H
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 4404              ORL     A,#04H
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
0019 22                RET     
001A         ?C0013:
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
001A 906579            MOV     DPTR,#06579H
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F EF                MOV     A,R7
0020 54FB              ANL     A,#0FBH
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
0025         ?C0015:
0025 22                RET     
             ; FUNCTION _PRISM_SetPulse1Mode (END)

             ; FUNCTION PRISM_ReadSeed (BEGIN)
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
0000 7B02              MOV     R3,#02H
0002 7A65              MOV     R2,#065H
0004 7908              MOV     R1,#08H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 260
0009         ?C0016:
0009 22                RET     
             ; FUNCTION PRISM_ReadSeed (END)

             ; FUNCTION _PRISM_WriteSeed (BEGIN)
                                           ; SOURCE LINE # 277
0000 900000      R     MOV     DPTR,#seed
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
0008 900000      R     MOV     DPTR,#seed
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 12  

000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 4E                ORL     A,R6
0012 6022              JZ      ?C0018
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
0014 7B02              MOV     R3,#02H
0016 7A65              MOV     R2,#065H
0018 7948              MOV     R1,#048H
001A 900000      R     MOV     DPTR,#seed
001D E0                MOVX    A,@DPTR
001E FC                MOV     R4,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FD                MOV     R5,A
0022 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 282
0025 7B02              MOV     R3,#02H
0027 7A65              MOV     R2,#065H
0029 7908              MOV     R1,#08H
002B 900000      R     MOV     DPTR,#seed
002E E0                MOVX    A,@DPTR
002F FC                MOV     R4,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 FD                MOV     R5,A
0033 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
0036         ?C0018:
0036 22                RET     
             ; FUNCTION _PRISM_WriteSeed (END)

             ; FUNCTION PRISM_ReadPolynomial (BEGIN)
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
0000 7B02              MOV     R3,#02H
0002 7A65              MOV     R2,#065H
0004 7918              MOV     R1,#018H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 304
0009         ?C0019:
0009 22                RET     
             ; FUNCTION PRISM_ReadPolynomial (END)

             ; FUNCTION _PRISM_WritePolynomial (BEGIN)
                                           ; SOURCE LINE # 321
0000 900000      R     MOV     DPTR,#polynomial
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
0008 7B02              MOV     R3,#02H
000A 7A65              MOV     R2,#065H
000C 7918              MOV     R1,#018H
000E 900000      R     MOV     DPTR,#polynomial
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 13  

0011 E0                MOVX    A,@DPTR
0012 FC                MOV     R4,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FD                MOV     R5,A
0016 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 326
0019 22                RET     
             ; FUNCTION _PRISM_WritePolynomial (END)

             ; FUNCTION PRISM_ReadPulse0 (BEGIN)
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 345
0000 7B02              MOV     R3,#02H
0002 7A65              MOV     R2,#065H
0004 7928              MOV     R1,#028H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 346
0009         ?C0021:
0009 22                RET     
             ; FUNCTION PRISM_ReadPulse0 (END)

             ; FUNCTION _PRISM_WritePulse0 (BEGIN)
                                           ; SOURCE LINE # 363
0000 900000      R     MOV     DPTR,#pulseDensity0
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 365
                                           ; SOURCE LINE # 366
0008 7B02              MOV     R3,#02H
000A 7A65              MOV     R2,#065H
000C 7928              MOV     R1,#028H
000E 900000      R     MOV     DPTR,#pulseDensity0
0011 E0                MOVX    A,@DPTR
0012 FC                MOV     R4,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FD                MOV     R5,A
0016 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 367
0019 22                RET     
             ; FUNCTION _PRISM_WritePulse0 (END)

             ; FUNCTION PRISM_ReadPulse1 (BEGIN)
                                           ; SOURCE LINE # 384
                                           ; SOURCE LINE # 385
                                           ; SOURCE LINE # 386
0000 7B02              MOV     R3,#02H
0002 7A65              MOV     R2,#065H
0004 7938              MOV     R1,#038H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 387
0009         ?C0023:
0009 22                RET     
             ; FUNCTION PRISM_ReadPulse1 (END)

             ; FUNCTION _PRISM_WritePulse1 (BEGIN)
                                           ; SOURCE LINE # 404
C51 COMPILER V8.16   PRISM                                                                 07/15/2011 13:52:50 PAGE 14  

0000 900000      R     MOV     DPTR,#pulseDensity1
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 406
                                           ; SOURCE LINE # 407
0008 7B02              MOV     R3,#02H
000A 7A65              MOV     R2,#065H
000C 7938              MOV     R1,#038H
000E 900000      R     MOV     DPTR,#pulseDensity1
0011 E0                MOVX    A,@DPTR
0012 FC                MOV     R4,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FD                MOV     R5,A
0016 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 408
0019 22                RET     
             ; FUNCTION _PRISM_WritePulse1 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
