C51 COMPILER V8.16   PRISM_PM                                                              07/15/2011 13:52:50 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE PRISM_PM
OBJECT MODULE PLACED IN C:/Users/Jon Moeller/Documents/PSoC Creator/clockARM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/Debug/PRISM_PM.OBJ
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\1.0\PSoC Creator\import\keil\pk51\8.16\C51\BIN\c51.exe C:\Use
                    -rs\Jon Moeller\Documents\PSoC Creator\clockARM\ClockTest\ClockTest.cydsn\Generated_Source\PSoC3\PRISM_PM.c NOIV LARGE MO
                    -DDP2 OMF2 VB(1) PR(C:/Users/Jon Moeller/Documents/PSoC Creator/clockARM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/Debug/
                    -PRISM_PM.lst) CD DB NOIP OT(2,SIZE) INCDIR(Generated_Source/PSoC3) OJ(C:/Users/Jon Moeller/Documents/PSoC Creator/clockA
                    -RM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/Debug/PRISM_PM.OBJ)

line level    source

   1          /*******************************************************************************
   2          * File Name: PRISM.c
   3          * Version 2.0
   4          *
   5          * Description:
   6          *  This file provides Sleep/WakeUp APIs functionality of the PrISM component
   7          *
   8          * Note:
   9          *
  10          *******************************************************************************
  11          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include "PRISM.h"
  18          
  19          
  20          /***************************************
  21          * Forward function references
  22          ***************************************/
  23          void PRISM_Enable(void);
  24          
  25          
  26          /***************************************
  27          * Local data allocation
  28          ***************************************/
  29          static PRISM_BACKUP_STRUCT  PRISM_backup = 
  30          {
  31              /* enableState */
  32              0u,
  33              /* cr */
  34              #if(!PRISM_PULSE_TYPE_HARDCODED)
  35                  (PRISM_GREATERTHAN_OR_EQUAL == 0 ? \
  36                                                          PRISM_CTRL_COMPARE_TYPE0_GREATER_THAN_OR_EQUAL : 0) |
  37                  (PRISM_GREATERTHAN_OR_EQUAL == 0 ? \
  38                                                          PRISM_CTRL_COMPARE_TYPE1_GREATER_THAN_OR_EQUAL : 0),
  39              #endif /* End PRISM_PULSE_TYPE_HARDCODED */
  40              /* seed */    
  41              PRISM_SEED,
  42              /* seed_copy */    
  43              PRISM_SEED,
  44              /* polynom */
  45              PRISM_POLYNOM,
  46              #if(PRISM_PSOC3_ES2 || PRISM_PSOC5_ES1) /* PSoC3 ES2 or early, PSoC5 ES1*/
                      /* density0 */
                      PRISM_DENSITY0,
                      /* density1 */
                      PRISM_DENSITY1,
                  #endif /*End PRISM_PSOC3_ES2 || PRISM_PSOC5_ES1*/
C51 COMPILER V8.16   PRISM_PM                                                              07/15/2011 13:52:50 PAGE 2   

  52          };
  53          
  54          
  55          /*******************************************************************************
  56          * Function Name: PRISM_SaveConfig
  57          ********************************************************************************
  58          *
  59          * Summary:
  60          *  Saves the current user configuration.
  61          *  
  62          * Parameters:  
  63          *  None.
  64          *
  65          * Return: 
  66          *  None.
  67          *
  68          * Global Variables:
  69          *  PRISM_backup - modified when non-retention registers are saved.
  70          *
  71          * Reentrant:
  72          *  No.
  73          *
  74          *******************************************************************************/
  75          void PRISM_SaveConfig(void)
  76          {
  77   1          /* PSoC3 ES2 or early, PSoC5 ES1*/
  78   1          #if (PRISM_PSOC3_ES2 || PRISM_PSOC5_ES1)
              
                      #if(!PRISM_PULSE_TYPE_HARDCODED)
                          PRISM_backup.cr = PRISM_CONTROL_REG;
                      #endif /* End PRISM_PULSE_TYPE_HARDCODED */
                      PRISM_backup.seed = PRISM_ReadSeed();
                      PRISM_backup.seed_copy = CY_GET_REG16(PRISM_SEED_COPY_PTR);
                      PRISM_backup.polynom = PRISM_ReadPolynomial();
                      PRISM_backup.density0 = PRISM_ReadPulse0();
                      PRISM_backup.density1 = PRISM_ReadPulse1();
                  
                  /* PSoC3 ES3 or later, PSoC5 ES2 or later*/
                  #elif (PRISM_PSOC3_ES3 || PRISM_PSOC5_ES2)
  91   1      
  92   1              #if(!PRISM_PULSE_TYPE_HARDCODED)
  93   1                  PRISM_backup.cr = PRISM_CONTROL_REG;
  94   1              #endif /* End PRISM_PULSE_TYPE_HARDCODED */
  95   1              PRISM_backup.seed = PRISM_ReadSeed();
  96   1              PRISM_backup.seed_copy = CY_GET_REG16(PRISM_SEED_COPY_PTR);
  97   1              PRISM_backup.polynom = PRISM_ReadPolynomial();
  98   1          
  99   1          #endif  /* Unknown chip die is not taken into account */
 100   1      }
 101          
 102          
 103          /*******************************************************************************
 104          * Function Name: PRISM_RestoreConfig
 105          ********************************************************************************
 106          *
 107          * Summary:
 108          *  Restores the current user configuration.
 109          *
 110          * Parameters:  
 111          *  None.
 112          *
 113          * Return: 
C51 COMPILER V8.16   PRISM_PM                                                              07/15/2011 13:52:50 PAGE 3   

 114          *  None.
 115          *
 116          * Global Variables:
 117          *  PRISM_backup - used when non-retention registers are restored.
 118          *
 119          *******************************************************************************/
 120          void PRISM_RestoreConfig(void) 
 121          {
 122   1          /* PSoC3 ES2 or early, PSoC5 ES1*/
 123   1          #if (PRISM_PSOC3_ES2 || PRISM_PSOC5_ES1)
                  
                      uint8 enableInterrupts;
                      
                      #if(!PRISM_PULSE_TYPE_HARDCODED)
                          PRISM_CONTROL_REG = PRISM_backup.cr;
                      #endif /* End PRISM_PULSE_TYPE_HARDCODED */
              
                      CY_SET_REG16(PRISM_SEED_COPY_PTR, PRISM_backup.seed_copy);
                      CY_SET_REG16(PRISM_SEED_PTR, PRISM_backup.seed);
                      PRISM_WritePolynomial(PRISM_backup.polynom);
                      PRISM_WritePulse0(PRISM_backup.density0);
                      PRISM_WritePulse1(PRISM_backup.density1);
                      
                      enableInterrupts = CyEnterCriticalSection();
                      /* Set FIFO0_CLR bit to use FIFO0 as a simple one-byte buffer*/
                      #if (PRISM_RESOLUTION <= 8u)      /* 8bit - PrISM */
                          PRISM_AUX_CONTROL_REG |= PRISM_FIFO0_CLR;
                      #elif (PRISM_RESOLUTION <= 16u)   /* 16bit - PrISM */
                          CY_SET_REG16(PRISM_AUX_CONTROL_PTR, CY_GET_REG16(PRISM_AUX_CONTROL_PTR) | 
                                                          PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u);
                      #elif (PRISM_RESOLUTION <= 24)   /* 24bit - PrISM */
                          CY_SET_REG24(PRISM_AUX_CONTROL_PTR, CY_GET_REG24(PRISM_AUX_CONTROL_PTR) |
                                                          PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u );
                          CY_SET_REG24(PRISM_AUX_CONTROL2_PTR, CY_GET_REG24(PRISM_AUX_CONTROL2_PTR) | 
                                                          PRISM_FIFO0_CLR );
                      #else                                 /* 32bit - PrISM */
                          CY_SET_REG32(PRISM_AUX_CONTROL_PTR, CY_GET_REG32(PRISM_AUX_CONTROL_PTR) |
                                                          PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u );
                          CY_SET_REG32(PRISM_AUX_CONTROL2_PTR, CY_GET_REG32(PRISM_AUX_CONTROL2_PTR) |
                                                          PRISM_FIFO0_CLR | PRISM_FIFO0_CLR << 8u );
                      #endif                                /* End PRISM_RESOLUTION */
                      CyExitCriticalSection(enableInterrupts);
                 
                  /* PSoC3 ES3 or later, PSoC5 ES2 or later*/
                  #elif (PRISM_PSOC3_ES3 || PRISM_PSOC5_ES2)
 159   1      
 160   1              #if(!PRISM_PULSE_TYPE_HARDCODED)
 161   1                  PRISM_CONTROL_REG = PRISM_backup.cr;
 162   1              #endif /* End PRISM_PULSE_TYPE_HARDCODED */
 163   1      
 164   1              CY_SET_REG16(PRISM_SEED_COPY_PTR, PRISM_backup.seed_copy);
 165   1              CY_SET_REG16(PRISM_SEED_PTR, PRISM_backup.seed);
 166   1              PRISM_WritePolynomial(PRISM_backup.polynom);
 167   1          
 168   1          #endif  /* End PRISM_PSOC3_ES2 || PRISM_PSOC5_ES1 */
 169   1      }
 170          
 171          
 172          /*******************************************************************************
 173          * Function Name: PRISM_Sleep
 174          ********************************************************************************
 175          *
C51 COMPILER V8.16   PRISM_PM                                                              07/15/2011 13:52:50 PAGE 4   

 176          * Summary:
 177          *  Stops and saves the user configuration
 178          *  
 179          * Parameters:  
 180          *  None.
 181          *
 182          * Return: 
 183          *  None.
 184          *
 185          * Global Variables:
 186          *  PRISM_backup - modified when non-retention registers are saved.
 187          *
 188          * Reentrant:
 189          *  No.
 190          *
 191          *******************************************************************************/
 192          void PRISM_Sleep(void)
 193          {
 194   1          #if(!PRISM_PULSE_TYPE_HARDCODED)
 195   1              if((PRISM_CONTROL_REG & PRISM_CTRL_ENABLE) != 0u) 
 196   1              {
 197   2                  PRISM_backup.enableState = 1u;
 198   2              }
 199   1              else
 200   1              {
 201   2                  PRISM_backup.enableState = 0u;
 202   2              }
 203   1          #endif /* End PRISM_PULSE_TYPE_HARDCODED */
 204   1          PRISM_Stop();
 205   1          PRISM_SaveConfig();
 206   1      }
 207          
 208          
 209          /*******************************************************************************
 210          * Function Name: PRISM_Wakeup
 211          ********************************************************************************
 212          *
 213          * Summary:
 214          *  Restores and enables the user configuration
 215          *  
 216          * Parameters:  
 217          *  None.
 218          *
 219          * Return: 
 220          *  None.
 221          *
 222          * Global Variables:
 223          *  PRISM_backup - used when non-retention registers are restored.
 224          *
 225          *******************************************************************************/
 226          void PRISM_Wakeup(void) 
 227          {
 228   1          PRISM_RestoreConfig();
 229   1          if(PRISM_backup.enableState != 0u)
 230   1          {
 231   2              PRISM_Enable();
 232   2          } 
 233   1      }
 234          
 235          
 236          /* [] END OF FILE */
C51 COMPILER V8.16   PRISM_PM                                                              07/15/2011 13:52:50 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION PRISM_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 93
0000 906579            MOV     DPTR,#06579H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#PRISM_backup+01H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 95
000A 120000      E     LCALL   PRISM_ReadSeed
000D 900000      R     MOV     DPTR,#PRISM_backup+02H
0010 EE                MOV     A,R6
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
0015 7B02              MOV     R3,#02H
0017 7A65              MOV     R2,#065H
0019 7948              MOV     R1,#048H
001B 120000      E     LCALL   _cyread16_nodpx
001E 900000      R     MOV     DPTR,#PRISM_backup+04H
0021 EE                MOV     A,R6
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
0026 120000      E     LCALL   PRISM_ReadPolynomial
0029 900000      R     MOV     DPTR,#PRISM_backup+06H
002C EE                MOV     A,R6
002D F0                MOVX    @DPTR,A
002E A3                INC     DPTR
002F EF                MOV     A,R7
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
0031 22                RET     
             ; FUNCTION PRISM_SaveConfig (END)

             ; FUNCTION PRISM_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 161
0000 900000      R     MOV     DPTR,#PRISM_backup+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 906579            MOV     DPTR,#06579H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
000A 7B02              MOV     R3,#02H
000C 7A65              MOV     R2,#065H
000E 7948              MOV     R1,#048H
0010 900000      R     MOV     DPTR,#PRISM_backup+04H
0013 E0                MOVX    A,@DPTR
0014 FC                MOV     R4,A
0015 A3                INC     DPTR
C51 COMPILER V8.16   PRISM_PM                                                              07/15/2011 13:52:50 PAGE 6   

0016 E0                MOVX    A,@DPTR
0017 FD                MOV     R5,A
0018 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 165
001B 7B02              MOV     R3,#02H
001D 7A65              MOV     R2,#065H
001F 7908              MOV     R1,#08H
0021 900000      R     MOV     DPTR,#PRISM_backup+02H
0024 E0                MOVX    A,@DPTR
0025 FC                MOV     R4,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FD                MOV     R5,A
0029 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 166
002C 900000      R     MOV     DPTR,#PRISM_backup+06H
002F E0                MOVX    A,@DPTR
0030 FE                MOV     R6,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 120000      E     LCALL   _PRISM_WritePolynomial
                                           ; SOURCE LINE # 169
0037 22                RET     
             ; FUNCTION PRISM_RestoreConfig (END)

             ; FUNCTION PRISM_Sleep (BEGIN)
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 195
0000 906579            MOV     DPTR,#06579H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5401              ANL     A,#01H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 6008              JZ      ?C0003
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
000F 900000      R     MOV     DPTR,#PRISM_backup
0012 7401              MOV     A,#01H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
0015 8005              SJMP    ?C0004
0017         ?C0003:
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
0017 900000      R     MOV     DPTR,#PRISM_backup
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
001C         ?C0004:
                                           ; SOURCE LINE # 204
001C 120000      E     LCALL   PRISM_Stop
                                           ; SOURCE LINE # 205
001F 120000      R     LCALL   PRISM_SaveConfig
                                           ; SOURCE LINE # 206
0022 22                RET     
             ; FUNCTION PRISM_Sleep (END)
C51 COMPILER V8.16   PRISM_PM                                                              07/15/2011 13:52:50 PAGE 7   


             ; FUNCTION PRISM_Wakeup (BEGIN)
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
0000 120000      R     LCALL   PRISM_RestoreConfig
                                           ; SOURCE LINE # 229
0003 900000      R     MOV     DPTR,#PRISM_backup
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 EF                MOV     A,R7
0009 6003              JZ      ?C0007
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
000B 120000      E     LCALL   PRISM_Enable
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
000E         ?C0007:
000E 22                RET     
             ; FUNCTION PRISM_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    156    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
