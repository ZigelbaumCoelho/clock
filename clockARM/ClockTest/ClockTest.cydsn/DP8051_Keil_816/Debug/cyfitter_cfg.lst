C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN C:/Users/Jon Moeller/Documents/PSoC Creator/clockARM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/Debug/cyfitter_cfg.OBJ
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\1.0\PSoC Creator\import\keil\pk51\8.16\C51\BIN\c51.exe C:\Use
                    -rs\Jon Moeller\Documents\PSoC Creator\clockARM\ClockTest\ClockTest.cydsn\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARG
                    -E MODDP2 OMF2 VB(1) PR(C:/Users/Jon Moeller/Documents/PSoC Creator/clockARM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/De
                    -bug/cyfitter_cfg.lst) CD DB NOIP OT(2,SIZE) INCDIR(Generated_Source/PSoC3) OJ(C:/Users/Jon Moeller/Documents/PSoC Creato
                    -r/clockARM/ClockTest/ClockTest.cydsn/DP8051_Keil_816/Debug/cyfitter_cfg.OBJ)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 1.0 Production
   4          *
   5          * Description:
   6          * This file contains device initialization code. This file is automatically
   7          * generated by PSoC Creator.
   8          *
   9          ********************************************************************************
  10          * Copyright 2010, Cypress Semiconductor Corporation.  All rights reserved.
  11          * You may use this file only in accordance with the license, terms, conditions, 
  12          * disclaimers, and limitations in the end user license agreement accompanying 
  13          * the software package with which this file was provided.
  14          ********************************************************************************/
  15          
  16          #include <string.h>
  17          #include <cytypes.h>
  18          #include <cydevice_trm.h>
  19          #include <cyfitter.h>
  20          #include <CyLib.h>
  21          #include <CyDmac.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0
  26          #define CYCLOCKSTART_XTAL_ERROR  1
  27          #define CYCLOCKSTART_32KHZ_ERROR 2
  28          #define CYCLOCKSTART_PLL_ERROR   3
  29          
  30          /*******************************************************************************
  31          * Function Name: CyClockStartupError
  32          ********************************************************************************
  33          * Summary:
  34          *  If an error is encountered during clock configuration (crystal startup error,
  35          *  PLL lock error, etc) the system will end up here.  Unless reimplemented by 
  36          *  the customer, an infinite loop will be encountered.
  37          *
  38          * Parameters:  
  39          *   void.
  40          *
  41          *
  42          * Return:
  43          *   void.
  44          *
  45          *******************************************************************************/
  46          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
  49          static void CyClockStartupError(uint8 errorCode)
  50          {
  51   1          /* To remove the compiler warning if errorCode not used.                */
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 2   

  52   1          errorCode = errorCode;
  53   1      
  54   1          /* `#START CyClockStartupError` */
  55   1      
  56   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  57   1          /* we will end up here to allow the customer to implement something to  */
  58   1          /* deal with the clock condition.                                       */
  59   1      
  60   1          /* `#END` */
  61   1      
  62   1          /* If nothing else, stop here since the clocks have not started         */
  63   1          /* correctly.                                                           */
  64   1          while(1) {}
  65   1      }
  66          
  67          /* This file contains the data used to initialize the device. */
  68          
  69          #undef CYCODE
  70          #undef CYDATA
  71          #undef CYXDATA
  72          #undef CYFAR
  73          #if defined(__C51__) || defined(__CX51__)
  74          #define CYCODE code
  75          #define CYDATA data
  76          #define CYXDATA xdata
  77          #define CYFAR far
  78          extern void cymemzero(void CYFAR *addr, uint16 size);
  79          extern void cyconfigcpy(uint16 size, const void CYFAR *src, void CYFAR *dest) small;
  80          extern void cyconfigcpycode(uint16 size, const void CYCODE *src, void CYFAR *dest);
  81          #define CYMEMZERO(a,c) cymemzero((a),(c))
  82          #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  83          #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  84          #else
              #define CYCODE
              #define CYDATA
              #define CYXDATA
              #define CYFAR
              #define CYMEMZERO(a,c) cymemset((a),0,(c))
              #define CYCONFIGCPY(d,s,c) cymemcpy((d),(s),(c))
              #define CYCONFIGCPYCODE(d,s,c) cymemcpy((d),(s),(c))
              #endif
  93          
  94          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              #define CYPACKED __attribute__ ((packed))
              #define CYALIGNED __attribute__ ((aligned))
              #if CYDEV_CONFIGURATION_DMA
              #define DMAINITSEC __attribute__ ((section (".dma_init")))
              #else
              #define DMAINITSEC
              #endif
              #if defined(__ARMCC_VERSION)
              #define CY_CFG_MEMORY_BARRIER() __memory_changed()
              #else
              #define CY_CFG_MEMORY_BARRIER() __sync_synchronize()
              #endif
              #else
 108          /* Keil C51 and others */
 109          #define CYPACKED
 110          #define CYALIGNED
 111          #define DMAINITSEC
 112          #define CY_CFG_MEMORY_BARRIER()
 113          #endif
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 3   

 114          
 115          typedef struct {
 116                  void CYFAR *address;
 117                  uint16 size;
 118          } CYPACKED cfg_memset_t;
 119          
 120          typedef struct {
 121                  void CYFAR *dest;
 122                  const void CYFAR *src;
 123                  uint16 size;
 124          } CYPACKED cfg_memcpy_t;
 125          
 126          /* TD structure for big-endian systems
 127           * Requires 2-byte endian swap */
 128          struct td_t {
 129                  uint16 size;
 130                  uint8 flags;
 131                  uint8 next_td_ptr;
 132                  uint16 src;
 133                  uint16 dest;
 134          } CYPACKED;
 135          
 136          /* IOPORT_1 Address: CYDEV_PRTDSI_PRT1_BASE Size (bytes): 7 */
 137          #define BS_IOPORT_1_VAL ((const uint8 CYFAR *)0x080000)
 138          
 139          /* IOPORT_5 Address: CYDEV_PRTDSI_PRT5_BASE Size (bytes): 7 */
 140          #define BS_IOPORT_5_VAL ((const uint8 CYFAR *)0x080008)
 141          
 142          /* TMR0 Address: CYREG_TMR0_CFG0 Size (bytes): 12 */
 143          #define BS_TMR0_VAL ((const uint8 CYFAR *)0x080010)
 144          
 145          /* UDB_0_1_1_CONFIG Address: CYDEV_UCFG_B1_P4_U0_BASE Size (bytes): 128 */
 146          #define BS_UDB_0_1_1_CONFIG_VAL ((const uint8 CYFAR *)0x08001C)
 147          
 148          /* UDB_0_1_0_CONFIG Address: CYDEV_UCFG_B1_P4_U1_BASE Size (bytes): 128 */
 149          #define BS_UDB_0_1_0_CONFIG_VAL ((const uint8 CYFAR *)0x08009C)
 150          
 151          /* DSISWITCH_0_0 Address: CYDEV_UCFG_DSI13_BASE Size (bytes): 128 */
 152          #define BS_DSISWITCH_0_0_VAL ((const uint8 CYFAR *)0x08011C)
 153          
 154          /* DSI0_0_HV_ROUTING Address: CYDEV_UCFG_DSI13_BASE + 0x00000080 Size (bytes): 128 */
 155          #define BS_DSI0_0_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08019C)
 156          
 157          /* DSISWITCH_0_1 Address: CYDEV_UCFG_DSI12_BASE Size (bytes): 128 */
 158          #define BS_DSISWITCH_0_1_VAL ((const uint8 CYFAR *)0x08021C)
 159          
 160          /* DSI0_1_HV_ROUTING Address: CYDEV_UCFG_DSI12_BASE + 0x00000080 Size (bytes): 128 */
 161          #define BS_DSI0_1_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08029C)
 162          
 163          /* UDB_1_0_HV_ROUTING Address: CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 164          #define BS_UDB_1_0_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08031C)
 165          
 166          /* UDBSWITCH_0_1 Address: CYDEV_UCFG_B1_P4_ROUTE_BASE Size (bytes): 128 */
 167          #define BS_UDBSWITCH_0_1_VAL ((const uint8 CYFAR *)0x08039C)
 168          
 169          /* UDB_1_1_HV_ROUTING Address: CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 170          #define BS_UDB_1_1_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08041C)
 171          
 172          /* UDB_2_1_HV_ROUTING Address: CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080 Size (bytes): 128 */
 173          #define BS_UDB_2_1_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08049C)
 174          
 175          /* DSI3_1_HV_ROUTING Address: CYDEV_UCFG_DSI8_BASE + 0x00000080 Size (bytes): 128 */
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 4   

 176          #define BS_DSI3_1_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08051C)
 177          
 178          /* DSI3_2_HV_ROUTING Address: CYDEV_UCFG_DSI3_BASE + 0x00000080 Size (bytes): 128 */
 179          #define BS_DSI3_2_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08059C)
 180          
 181          /* DSISWITCH_1_3 Address: CYDEV_UCFG_DSI2_BASE Size (bytes): 128 */
 182          #define BS_DSISWITCH_1_3_VAL ((const uint8 CYFAR *)0x08061C)
 183          
 184          /* DSI3_3_HV_ROUTING Address: CYDEV_UCFG_DSI2_BASE + 0x00000080 Size (bytes): 128 */
 185          #define BS_DSI3_3_HV_ROUTING_VAL ((const uint8 CYFAR *)0x08069C)
 186          
 187          /* UCFG_BCTL1 Address: CYREG_BCTL1_MDCLK_EN Size (bytes): 16 */
 188          #define BS_UCFG_BCTL1_VAL ((const uint8 CYFAR *)0x08071C)
 189          
 190          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 191          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x08072C)
 192          
 193          /* IOPINS0_5 Address: CYREG_PRT5_DM0 Size (bytes): 8 */
 194          #define BS_IOPINS0_5_VAL ((const uint8 CYFAR *)0x080734)
 195          
 196          
 197          static const uint8 CYCODE CH1_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
             -;
 198          
 199          static const uint8 CYCODE CH2_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00 }
             -;
 200          
 201          static const uint8 CYCODE CH5_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00 }
             -;
 202          
 203          static const uint8 CYCODE CH6_ADDR_DATA0[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01, 0x00 }
             -;
 204          
 205          static const uint8 CYCODE DMA_TD_START_CMD[] DMAINITSEC = { 0x01, 0x00, 0x00, 0x00, 0x01 };
 206          
 207          static uint32 CYXDATA DMA_ZERO_VAL CYALIGNED;
 208          
 209          static const struct td_t CYCODE CFG_TD_LIST0[] DMAINITSEC = {
 210          /* Size, Flags, Next, Source, Destination */
 211                  { 8, 0x23, 0x02, (uint16)(&CH1_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM1_CFG0) },        /* TD 1 */
 212                  { 8, 0x23, 0x03, (uint16)(&CH2_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM2_CFG0) },        /* TD 2 */
 213                  { 8, 0x23, 0x04, (uint16)(&CH5_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM5_CFG0) },        /* TD 3 */
 214                  { 8, 0x23, 0x05, (uint16)(&CH6_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM6_CFG0) },        /* TD 4 */
 215                  { 5, 0x23, 0x06, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH1_BASIC_CFG) },     /* TD 5 */
 216                  { 5, 0x23, 0x07, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH2_BASIC_CFG) },     /* TD 6 */
 217                  { 5, 0x23, 0x08, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH5_BASIC_CFG) },     /* TD 7 */
 218                  { 5, 0x23, 0xFE, (uint16)(&DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH6_BASIC_CFG) },     /* TD 8 */
 219                  { 16, 0x22, 0x0A, (uint16)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT0_DR) },   /* TD 9 */
 220                  { 48, 0x22, 0x0B, (uint16)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT2_DR) },   /* TD 10 */
 221                  { 16, 0x22, 0x0C, (uint16)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT6_DR) },   /* TD 11 */
 222                  { 16, 0x22, 0x0D, (uint16)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT12_DR) },  /* TD 12 */
 223                  { 16, 0x22, 0xFE, (uint16)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT15_DR) },  /* TD 13 */
 224                  { 4095, 0x22, 0x0F, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P0_U0_BASE) },      /* TD 14 */
 225                  { 1, 0x22, 0x10, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE + 0x00000080 + 0x7F) },  /*
             - TD 15 */
 226                  { 896, 0x22, 0x11, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P2_U0_BASE) },       /* TD 16 */
 227                  { 384, 0x22, 0x12, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_B1_P5_U0_BASE) },       /* TD 17 */
 228                  { 512, 0x22, 0x13, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE) },   /* TD 18 */
 229                  { 128, 0x22, 0x14, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE) },   /* TD 19 */
 230                  { 1152, 0x22, 0x15, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE) },  /* TD 20 */
 231                  { 256, 0x22, 0x16, (uint16)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE) },   /* TD 21 */
 232                  { 16, 0x22, 0xFE, (uint16)(&DMA_ZERO_VAL), (uint16)(CYREG_BCTL0_MDCLK_EN) },    /* TD 22 */
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 5   

 233                  { 7, 0x23, 0x18, (uint16)(BS_IOPORT_1_VAL), (uint16)(CYDEV_PRTDSI_PRT1_BASE) }, /* TD 23 */
 234                  { 7, 0x23, 0x19, (uint16)(BS_IOPORT_5_VAL), (uint16)(CYDEV_PRTDSI_PRT5_BASE) }, /* TD 24 */
 235                  { 12, 0x23, 0xFE, (uint16)(BS_TMR0_VAL), (uint16)(CYREG_TMR0_CFG0) },   /* TD 25 */
 236                  { 128, 0x23, 0x1B, (uint16)(BS_UDB_0_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U0_BASE) },     /* TD 26 */
 237                  { 128, 0x23, 0x1C, (uint16)(BS_UDB_0_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U1_BASE) },     /* TD 27 */
 238                  { 128, 0x23, 0x1D, (uint16)(BS_DSISWITCH_0_0_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE) },   /* TD 28 */
 239                  { 128, 0x23, 0x1E, (uint16)(BS_DSI0_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE + 0x00000080) },  /*
             - TD 29 */
 240                  { 128, 0x23, 0x1F, (uint16)(BS_DSISWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE) },   /* TD 30 */
 241                  { 128, 0x23, 0x20, (uint16)(BS_DSI0_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE + 0x00000080) },  /*
             - TD 31 */
 242                  { 128, 0x23, 0x21, (uint16)(BS_UDB_1_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080
             -) },        /* TD 32 */
 243                  { 128, 0x23, 0x22, (uint16)(BS_UDBSWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE) },     /* TD 33 */
 244                  { 128, 0x23, 0x23, (uint16)(BS_UDB_1_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080
             -) },        /* TD 34 */
 245                  { 128, 0x23, 0x24, (uint16)(BS_UDB_2_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080
             -) },        /* TD 35 */
 246                  { 128, 0x23, 0x25, (uint16)(BS_DSI3_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE + 0x00000080) },   /* 
             -TD 36 */
 247                  { 128, 0x23, 0x26, (uint16)(BS_DSI3_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE + 0x00000080) },   /* 
             -TD 37 */
 248                  { 128, 0x23, 0x27, (uint16)(BS_DSISWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE) },    /* TD 38 */
 249                  { 128, 0x23, 0x28, (uint16)(BS_DSI3_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE + 0x00000080) },   /* 
             -TD 39 */
 250                  { 16, 0x23, 0xFE, (uint16)(BS_UCFG_BCTL1_VAL), (uint16)(CYREG_BCTL1_MDCLK_EN) },        /* TD 40 */
 251          };
 252          static void cfg_dma_init(void)
 253          {
 254   1              DMA_ZERO_VAL = 0u;
 255   1              DMAC_CFGMEM[0].CFG0[0] = 0x10;          /* set burstcount */
 256   1              DMAC_CH[0].basic_cfg[0] = 0x01u;        /* enable channel0 */
 257   1              DMAC_CH[0].basic_status[1] = 0;         /* set channel0's first td to 0 */
 258   1              
 259   1              DMAC_TDMEM[0].TD0[2] = 0x01;            /* set td0's next td to 1 */
 260   1              DMAC_TDMEM[0].TD0[3] = 0xA3;            /* set td0's flags */
 261   1              CY_SET_REG16((reg16 *) &DMAC_TDMEM[0].TD0[0], 40*8);                                    /* set td0's size */
 262   1              CY_SET_REG16((reg16 *) &DMAC_TDMEM[0].TD1[0], (uint16)(uint32)CFG_TD_LIST0);    /* set td0's src addr */
 263   1              CY_SET_REG16((reg16 *) &DMAC_TDMEM[0].TD1[2], CYDEV_PHUB_TDMEM1_BASE);  /* set td0's dst addr */
 264   1              CY_SET_REG16((reg16 *) &DMAC_CFGMEM[0].CFG1[0], (uint16)(CYDEV_FLS_BASE >> 16));                                /* set ch0's src high
             - addr */
 265   1              CY_SET_REG16((reg16 *) &DMAC_CFGMEM[0].CFG1[2], (uint16)(CYDEV_PHUB_TDMEM1_BASE >> 16));                                /* set ch0's 
             -dst high addr */
 266   1              DMAC_CH[1].basic_status[1] = 0x09;
 267   1              DMAC_CH[2].basic_status[1] = 0x0E;
 268   1              DMAC_CH[5].basic_status[1] = 0x17;
 269   1              DMAC_CH[6].basic_status[1] = 0x1A;
 270   1      
 271   1              CY_CFG_MEMORY_BARRIER();
 272   1              DMAC_CH[0].action[0] = CPU_REQ;    /* initiate the DMA transfer */
 273   1              CY_CFG_MEMORY_BARRIER();
 274   1      
 275   1              while((CY_GET_REG8(CYREG_PHUB_CH0_BASIC_STATUS) & 0x01u)){}
 276   1              while((CY_GET_REG8(CYREG_PHUB_CH1_BASIC_STATUS) & 0x01u)){}
 277   1              while((CY_GET_REG8(CYREG_PHUB_CH2_BASIC_STATUS) & 0x01u)){}
 278   1              while((CY_GET_REG8(CYREG_PHUB_CH5_BASIC_STATUS) & 0x01u)){}
 279   1              while((CY_GET_REG8(CYREG_PHUB_CH6_BASIC_STATUS) & 0x01u)){}
 280   1      
 281   1      
 282   1      }
 283          static void ClockSetup(void)
 284          {
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 6   

 285   1              reg32  timeout;
 286   1              reg32* timeout_p = &timeout;
 287   1              reg8   pllLock;
 288   1      
 289   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x580000);
 290   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x18000B);
 291   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02);
 292   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 293   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03);
 294   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8(CYREG_FLSHID_CUST_TABLES_IMO_3MHZ)));
 295   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008);
 296   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 297   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051);
 298   1              pllLock = 0;
 299   1              for (timeout = 56; *timeout_p && (pllLock != 0x03u); timeout--) { pllLock = 0x03u & ((pllLock << 1) | ((C
             -Y_GET_REG8(CYREG_FASTCLK_PLL_SR) & 0x01u) >> 0)); }
 300   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0103);
 301   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 302   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07);
 303   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00);
 304   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48);
 305   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 306   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02);
 307   1      
 308   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8(CYREG_PM_ACT_CFG2) | 0x03)));
 309   1      }
 310          
 311          /* Analog API Functions */
 312          void AnalogSetDefault(void)
 313          {
 314   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u);
 315   1              CY_SET_REG8(CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 316   1              CY_SET_REG8(CYREG_BG_DFT1, (bg_xover_inl_trim >> 4) & 0x0Fu);
 317   1              CY_SET_REG8(CYREG_PUMP_CR0, 0x44);
 318   1      }
 319          
 320          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 321          
 322          /* This function is called by the start-up code for the selected device. */
 323          void cyfitter_cfg(void)
 324          {
 325   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xF1 : 0xC0));
 326   1              CY_SET_XTND_REG8(CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8(CYREG_MLOGIC_DEBUG) | 0x05));
 327   1              cfg_dma_init();
 328   1      
 329   1      
 330   1              /* Enable digital routing */
 331   1              CY_SET_XTND_REG8(CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL0_BANK_CTL) | 0x02u);
 332   1              CY_SET_XTND_REG8(CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL1_BANK_CTL) | 0x02u);
 333   1      
 334   1              /* Enable UDB array */
 335   1              CY_SET_REG8(CYREG_PM_ACT_CFG0, CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x40u);
 336   1              CY_SET_REG8(CYREG_PM_AVAIL_CR2, CY_GET_REG8(CYREG_PM_AVAIL_CR2) | 0x10u);
 337   1      
 338   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (void CYFAR *)(BS_IOPINS0_1_VAL), 8);
 339   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT5_DM0), (void CYFAR *)(BS_IOPINS0_5_VAL), 8);
 340   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_B1_P4_U0_CFG24), 0x40);
 341   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_B1_P4_U0_CFG26), 0x4C);
 342   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_B1_P4_U0_CFG27), 0x40);
 343   1              /* BYTES WRITTEN: 19 */
 344   1      
 345   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0x31 : 0x00));
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 7   

 346   1              ClockSetup();
 347   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xB1 : 0x80));
 348   1      
 349   1              AnalogSetDefault();
 350   1      
 351   1              /* Configure alternate active mode */
 352   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (void CYFAR *)CYDEV_PM_ACT_BASE, 14);
 353   1              CY_SET_REG8(CYREG_PM_STBY_CFG0, CY_GET_REG8(CYREG_PM_STBY_CFG0) & ~0x02u);      /* Disable CPU */
 354   1      }
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 49
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 52
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 64
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION cfg_dma_init (BEGIN)
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7D00              MOV     R5,#00H
0006 7C00              MOV     R4,#00H
0008 900000      R     MOV     DPTR,#DMA_ZERO_VAL
000B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 255
000E 907600            MOV     DPTR,#07600H
0011 7410              MOV     A,#010H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 256
0014 907010            MOV     DPTR,#07010H
0017 7401              MOV     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 257
001A 907019            MOV     DPTR,#07019H
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 259
001F 907802            MOV     DPTR,#07802H
0022 7401              MOV     A,#01H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 260
0025 907803            MOV     DPTR,#07803H
0028 74A3              MOV     A,#0A3H
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 261
002B 7B02              MOV     R3,#02H
002D 7A78              MOV     R2,#078H
002F 7900              MOV     R1,#00H
0031 7D40              MOV     R5,#040H
0033 7C01              MOV     R4,#01H
0035 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 262
0038 7B02              MOV     R3,#02H
003A 7A78              MOV     R2,#078H
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 9   

003C 7904              MOV     R1,#04H
003E C003              PUSH    AR3
0040 C002              PUSH    AR2
0042 C001              PUSH    AR1
0044 7BFF              MOV     R3,#0FFH
0046 7A00        R     MOV     R2,#HIGH CFG_TD_LIST0
0048 7900        R     MOV     R1,#LOW CFG_TD_LIST0
004A AC02              MOV     R4,AR2
004C AD01              MOV     R5,AR1
004E D001              POP     AR1
0050 D002              POP     AR2
0052 D003              POP     AR3
0054 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 263
0057 7B02              MOV     R3,#02H
0059 7A78              MOV     R2,#078H
005B 7906              MOV     R1,#06H
005D 7D08              MOV     R5,#08H
005F 7C78              MOV     R4,#078H
0061 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 264
0064 7B02              MOV     R3,#02H
0066 7A76              MOV     R2,#076H
0068 7904              MOV     R1,#04H
006A 7D10              MOV     R5,#010H
006C 7C00              MOV     R4,#00H
006E 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 265
0071 7B02              MOV     R3,#02H
0073 7A76              MOV     R2,#076H
0075 7906              MOV     R1,#06H
0077 7D00              MOV     R5,#00H
0079 7C00              MOV     R4,#00H
007B 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 266
007E 907029            MOV     DPTR,#07029H
0081 7409              MOV     A,#09H
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 267
0084 907039            MOV     DPTR,#07039H
0087 740E              MOV     A,#0EH
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
008A 907069            MOV     DPTR,#07069H
008D 7417              MOV     A,#017H
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
0090 907079            MOV     DPTR,#07079H
0093 741A              MOV     A,#01AH
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 272
0096 907014            MOV     DPTR,#07014H
0099 7401              MOV     A,#01H
009B F0                MOVX    @DPTR,A
009C         ?C0004:
                                           ; SOURCE LINE # 275
009C 907018            MOV     DPTR,#07018H
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 20E0F7            JB      ACC.0,?C0004
00A5         ?C0006:
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 10  

                                           ; SOURCE LINE # 276
00A5 907028            MOV     DPTR,#07028H
00A8 E0                MOVX    A,@DPTR
00A9 FF                MOV     R7,A
00AA EF                MOV     A,R7
00AB 20E0F7            JB      ACC.0,?C0006
00AE         ?C0008:
                                           ; SOURCE LINE # 277
00AE 907038            MOV     DPTR,#07038H
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 EF                MOV     A,R7
00B4 20E0F7            JB      ACC.0,?C0008
00B7         ?C0010:
                                           ; SOURCE LINE # 278
00B7 907068            MOV     DPTR,#07068H
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 20E0F7            JB      ACC.0,?C0010
00C0         ?C0012:
                                           ; SOURCE LINE # 279
00C0 907078            MOV     DPTR,#07078H
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
00C5 EF                MOV     A,R7
00C6 20E0F7            JB      ACC.0,?C0012
                                           ; SOURCE LINE # 282
00C9         ?C0014:
00C9 22                RET     
             ; FUNCTION cfg_dma_init (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 286
0000 7E00        R     MOV     R6,#HIGH timeout
0002 7F00        R     MOV     R7,#LOW timeout
0004 900000      R     MOV     DPTR,#timeout_p
0007 EE                MOV     A,R6
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 289
000C 7B00              MOV     R3,#00H
000E 7A40              MOV     R2,#040H
0010 7980              MOV     R1,#080H
0012 7F00              MOV     R7,#00H
0014 7E00              MOV     R6,#00H
0016 7D58              MOV     R5,#058H
0018 7C00              MOV     R4,#00H
001A 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 290
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7F0B              MOV     R7,#0BH
0025 7E00              MOV     R6,#00H
0027 7D18              MOV     R5,#018H
0029 7C00              MOV     R4,#00H
002B 120000      E     LCALL   _cywrite24
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 11  

                                           ; SOURCE LINE # 291
002E 904300            MOV     DPTR,#04300H
0031 7402              MOV     A,#02H
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
0034 904000            MOV     DPTR,#04000H
0037 7408              MOV     A,#08H
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
003A 904200            MOV     DPTR,#04200H
003D 7403              MOV     A,#03H
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
0040 7B0C              MOV     R3,#0CH
0042 7A01              MOV     R2,#01H
0044 7908              MOV     R1,#08H
0046 120000      E     LCALL   _cyread8
0049 9046A1            MOV     DPTR,#046A1H
004C EF                MOV     A,R7
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
004E 7B00              MOV     R3,#00H
0050 7A42              MOV     R2,#042H
0052 7922              MOV     R1,#022H
0054 7D08              MOV     R5,#08H
0056 7C00              MOV     R4,#00H
0058 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 296
005B 904000            MOV     DPTR,#04000H
005E 7408              MOV     A,#08H
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 297
0061 7B00              MOV     R3,#00H
0063 7A42              MOV     R2,#042H
0065 7920              MOV     R1,#020H
0067 7D51              MOV     R5,#051H
0069 7C10              MOV     R4,#010H
006B 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 298
006E 900000      R     MOV     DPTR,#pllLock
0071 E4                CLR     A
0072 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
0073 7F38              MOV     R7,#038H
0075 7E00              MOV     R6,#00H
0077 7D00              MOV     R5,#00H
0079 7C00              MOV     R4,#00H
007B 900000      R     MOV     DPTR,#timeout
007E 120000      E     LCALL   ?C?LSTXDATA
0081         ?C0015:
0081 900000      R     MOV     DPTR,#timeout_p
0084 E0                MOVX    A,@DPTR
0085 FE                MOV     R6,A
0086 A3                INC     DPTR
0087 E0                MOVX    A,@DPTR
0088 FF                MOV     R7,A
0089 8F82              MOV     DPL,R7
008B 8E83              MOV     DPH,R6
008D 120000      E     LCALL   ?C?LLDXDATA
0090 EC                MOV     A,R4
0091 4D                ORL     A,R5
0092 4E                ORL     A,R6
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 12  

0093 4F                ORL     A,R7
0094 6043              JZ      ?C0016
0096 900000      R     MOV     DPTR,#pllLock
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B EF                MOV     A,R7
009C 6403              XRL     A,#03H
009E 6039              JZ      ?C0016
00A0 904225            MOV     DPTR,#04225H
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 EF                MOV     A,R7
00A6 5401              ANL     A,#01H
00A8 FF                MOV     R7,A
00A9 7E00              MOV     R6,#00H
00AB 900000      R     MOV     DPTR,#pllLock
00AE E0                MOVX    A,@DPTR
00AF FE                MOV     R6,A
00B0 EE                MOV     A,R6
00B1 25E0              ADD     A,ACC
00B3 FE                MOV     R6,A
00B4 EE                MOV     A,R6
00B5 4F                ORL     A,R7
00B6 FF                MOV     R7,A
00B7 EF                MOV     A,R7
00B8 5403              ANL     A,#03H
00BA FF                MOV     R7,A
00BB 900000      R     MOV     DPTR,#pllLock
00BE EF                MOV     A,R7
00BF F0                MOVX    @DPTR,A
00C0 900000      R     MOV     DPTR,#timeout
00C3 120000      E     LCALL   ?C?LLDXDATA
00C6 7BFF              MOV     R3,#0FFH
00C8 7AFF              MOV     R2,#0FFH
00CA 79FF              MOV     R1,#0FFH
00CC 78FF              MOV     R0,#0FFH
00CE 120000      E     LCALL   ?C?LADD
00D1 900000      R     MOV     DPTR,#timeout
00D4 120000      E     LCALL   ?C?LSTXDATA
00D7 80A8              SJMP    ?C0015
00D9         ?C0016:
                                           ; SOURCE LINE # 300
00D9 7B00              MOV     R3,#00H
00DB 7A40              MOV     R2,#040H
00DD 7904              MOV     R1,#04H
00DF 7D03              MOV     R5,#03H
00E1 7C01              MOV     R4,#01H
00E3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 301
00E6 904004            MOV     DPTR,#04004H
00E9 E4                CLR     A
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
00EB 904004            MOV     DPTR,#04004H
00EE 7407              MOV     A,#07H
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
00F1 904006            MOV     DPTR,#04006H
00F4 E4                CLR     A
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 304
00F6 904008            MOV     DPTR,#04008H
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 13  

00F9 7448              MOV     A,#048H
00FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 305
00FC 904004            MOV     DPTR,#04004H
00FF E4                CLR     A
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 306
0101 904001            MOV     DPTR,#04001H
0104 7402              MOV     A,#02H
0106 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 308
0107 9043A2            MOV     DPTR,#043A2H
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C EF                MOV     A,R7
010D 4403              ORL     A,#03H
010F FF                MOV     R7,A
0110 EF                MOV     A,R7
0111 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
0112 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 14  

                                           ; SOURCE LINE # 318
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 325
0000 904800            MOV     DPTR,#04800H
0003 74F1              MOV     A,#0F1H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
0006 7B00              MOV     R3,#00H
0008 7A46              MOV     R2,#046H
000A 79E8              MOV     R1,#0E8H
000C 120000      E     LCALL   _cyread8
000F EF                MOV     A,R7
0010 4405              ORL     A,#05H
0012 FD                MOV     R5,A
0013 7B00              MOV     R3,#00H
0015 7A46              MOV     R2,#046H
0017 79E8              MOV     R1,#0E8H
0019 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 327
001C 120000      R     LCALL   cfg_dma_init
                                           ; SOURCE LINE # 331
001F 7B01              MOV     R3,#01H
0021 7A50              MOV     R2,#050H
0023 7903              MOV     R1,#03H
0025 120000      E     LCALL   _cyread8
0028 EF                MOV     A,R7
0029 4402              ORL     A,#02H
002B FD                MOV     R5,A
002C 7B01              MOV     R3,#01H
002E 7A50              MOV     R2,#050H
0030 7903              MOV     R1,#03H
0032 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 332
0035 7B01              MOV     R3,#01H
0037 7A50              MOV     R2,#050H
0039 7913              MOV     R1,#013H
003B 120000      E     LCALL   _cyread8
003E EF                MOV     A,R7
003F 4402              ORL     A,#02H
0041 FD                MOV     R5,A
0042 7B01              MOV     R3,#01H
0044 7A50              MOV     R2,#050H
0046 7913              MOV     R1,#013H
0048 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 335
004B 9043A0            MOV     DPTR,#043A0H
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 4440              ORL     A,#040H
0053 FF                MOV     R7,A
0054 9043A0            MOV     DPTR,#043A0H
0057 EF                MOV     A,R7
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
0059 9043C2            MOV     DPTR,#043C2H
005C E0                MOVX    A,@DPTR
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 15  

005D FF                MOV     R7,A
005E EF                MOV     A,R7
005F 4410              ORL     A,#010H
0061 FF                MOV     R7,A
0062 9043C2            MOV     DPTR,#043C2H
0065 EF                MOV     A,R7
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 338
0067 7B08              MOV     R3,#08H
0069 7A07              MOV     R2,#07H
006B 792C              MOV     R1,#02CH
006D C003              PUSH    AR3
006F C002              PUSH    AR2
0071 C001              PUSH    AR1
0073 7B00              MOV     R3,#00H
0075 7A51              MOV     R2,#051H
0077 7912              MOV     R1,#012H
0079 8B00        E     MOV     ?_cyconfigcpy?BYTE+05H,R3
007B 8A00        E     MOV     ?_cyconfigcpy?BYTE+06H,R2
007D 8900        E     MOV     ?_cyconfigcpy?BYTE+07H,R1
007F D001              POP     AR1
0081 D002              POP     AR2
0083 D003              POP     AR3
0085 7F08              MOV     R7,#08H
0087 7E00              MOV     R6,#00H
0089 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 339
008C 7B08              MOV     R3,#08H
008E 7A07              MOV     R2,#07H
0090 7934              MOV     R1,#034H
0092 C003              PUSH    AR3
0094 C002              PUSH    AR2
0096 C001              PUSH    AR1
0098 7B00              MOV     R3,#00H
009A 7A51              MOV     R2,#051H
009C 7952              MOV     R1,#052H
009E 8B00        E     MOV     ?_cyconfigcpy?BYTE+05H,R3
00A0 8A00        E     MOV     ?_cyconfigcpy?BYTE+06H,R2
00A2 8900        E     MOV     ?_cyconfigcpy?BYTE+07H,R1
00A4 D001              POP     AR1
00A6 D002              POP     AR2
00A8 D003              POP     AR3
00AA 7F08              MOV     R7,#08H
00AC 7E00              MOV     R6,#00H
00AE 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 340
00B1 7B01              MOV     R3,#01H
00B3 7A18              MOV     R2,#018H
00B5 7958              MOV     R1,#058H
00B7 7D40              MOV     R5,#040H
00B9 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 341
00BC 7B01              MOV     R3,#01H
00BE 7A18              MOV     R2,#018H
00C0 795A              MOV     R1,#05AH
00C2 7D4C              MOV     R5,#04CH
00C4 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 342
00C7 7B01              MOV     R3,#01H
00C9 7A18              MOV     R2,#018H
00CB 795B              MOV     R1,#05BH
00CD 7D40              MOV     R5,#040H
C51 COMPILER V8.16   CYFITTER_CFG                                                          07/15/2011 14:24:19 PAGE 16  

00CF 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 345
00D2 904800            MOV     DPTR,#04800H
00D5 7431              MOV     A,#031H
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
00D8 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 347
00DB 904800            MOV     DPTR,#04800H
00DE 74B1              MOV     A,#0B1H
00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 349
00E1 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 352
00E4 7B00              MOV     R3,#00H
00E6 7A43              MOV     R2,#043H
00E8 79A0              MOV     R1,#0A0H
00EA C003              PUSH    AR3
00EC C002              PUSH    AR2
00EE C001              PUSH    AR1
00F0 7B00              MOV     R3,#00H
00F2 7A43              MOV     R2,#043H
00F4 79B0              MOV     R1,#0B0H
00F6 8B00        E     MOV     ?_cyconfigcpy?BYTE+05H,R3
00F8 8A00        E     MOV     ?_cyconfigcpy?BYTE+06H,R2
00FA 8900        E     MOV     ?_cyconfigcpy?BYTE+07H,R1
00FC D001              POP     AR1
00FE D002              POP     AR2
0100 D003              POP     AR3
0102 7F0E              MOV     R7,#0EH
0104 7E00              MOV     R6,#00H
0106 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 353
0109 9043B0            MOV     DPTR,#043B0H
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E EF                MOV     A,R7
010F 54FD              ANL     A,#0FDH
0111 FF                MOV     R7,A
0112 9043B0            MOV     DPTR,#043B0H
0115 EF                MOV     A,R7
0116 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 354
0117 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    829    ----
   CONSTANT SIZE    =    357    ----
   XDATA SIZE       =      4       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
